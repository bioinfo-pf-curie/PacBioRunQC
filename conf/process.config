process {
    //container = process.container

    // Check the defaults for all processes
    cpus = { check_max( 1 * task.attempt, 'cpus' ) }
    memory = { check_max( 8.GB * task.attempt, 'memory' ) }
    time = { check_max( 2.h * task.attempt, 'time' ) }

    errorStrategy = { task.exitStatus in [143,137] ? 'retry' : 'finish' }
    maxRetries = 1
    maxErrors = '-1'

    // Process-specific resource requirements
    // Customise requirements for specific processes
    // Capture exit codes from upstream processes when piping
    shell = ['/bin/bash', '-euo', 'pipefail']

    // Export all env variables defined by the user in order to use user specific executable in the path
    clusterOptions = "-V"

}
